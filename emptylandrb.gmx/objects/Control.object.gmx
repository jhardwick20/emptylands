<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Menu.load != ""{
openfname=working_directory+Menu.load+".elm"
ini_open(openfname);
random_set_seed(ini_read_real("save","seed",0));
firstopenname=Menu.load
}
if Menu.load = "" {randomize()
firstopenname=""
openfname=""}
blockindex=0
version="0.013"
bn=0
savetime=0
firstsavename=""
blockid="Wall"
itemid="Arrow"
savefname=""
loaded=0
reopen=0
if Menu.mode=0{
repeat(20) {
with instance_create(random(room_width),random(room_height),Block){
blockid="Bush"
var spritename = asset_get_index("sprBlock" + string(blockid));
sprite_index=spritename
scrBlocks()
}}}

if Menu.mode=1{
repeat(10){ instance_create(irandom(room_width),irandom(room_height),TurfGen)}
}

advsave=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Block Choose
if Menu.mode=0{
if keyboard_check_pressed(ord("1")){
blockid="Wood"
}
if keyboard_check_pressed(ord("2")){
blockid="Stone"
}
if keyboard_check_pressed(ord("3")){
blockid="Bush"
}
if keyboard_check_pressed(ord("4")){
blockid="Water"
}
if keyboard_check_pressed(ord("5")){
blockid="Wall"
}
if keyboard_check_pressed(ord("6")){
blockid="Chest"
}
if keyboard_check_pressed(ord("7")){
blockid="Turtle"
}
if keyboard_check_pressed(ord("8")){
blockid="EnemyMan"
}}

//Debug For Adventure
if keyboard_check_pressed(ord("D")){
blockid="DungeonGen"
}

//Save Map Dialog!
if keyboard_check_pressed(ord("S")){
//savefname=get_save_filename_ext(".elm", "MyGreatMap.elm", working_directory, "Save Map");
firstsavename=get_string("Choose a Map Name! (No Spaces)","MyGreatMap");
savefname=working_directory+firstsavename+".elm"
}
//delete if exists (overwrite)
if firstsavename!=""{
if file_exists(savefname){
file_delete(savefname)
}}
//If it returns something
if firstsavename!="" and savetime=0 and !file_exists(savefname){
ini_open(savefname)
//Block Saving
blockindex=instance_number(Entity);
ini_write_real("blocks","index",blockindex)
ini_write_real("save","seed",random_get_seed())
while (blockindex+1)&gt;0{
blockinid[blockindex]=instance_find(Entity,blockindex)
blockindex-=1
}
blockindex=instance_number(Entity);
blockinid[blockindex]=blockinid[1]
while (blockindex+1)&gt;0{
blocksavestring=string(blockinid[blockindex].blockid)+"!"+string(blockinid[blockindex].x)+"!"+string(blockinid[blockindex].y)+"!"+string(blockinid[blockindex].direction)
ini_write_string("blocks", "block"+string(blockindex),blocksavestring)
blockindex-=1
}
ini_close()
firstsavename=""
}

//Open Map Dialog!
/*if keyboard_check_pressed(ord("O")){
//openfname=get_open_filename_ext(".elm", "MyGreatMap.elm", working_directory, "Open Map");
firstopenname=get_string("Enter a Map Name! (No Spaces)","MyGreatMap");
openfname=working_directory+firstopenname+".elm"
}
*/
//If it returns something
if firstopenname!=""{
repeat(instance_number(Entity)){
with Entity{
instance_destroy()
}
}
if Menu.load=""{
tiles=tile_get_ids();
ttgo=tile_get_count()-1
ttc=tile_get_count()
repeat(ttc){
tile_delete(tiles[ttgo])
ttgo-=1
}}
ini_open(openfname);
//blockload
blockindex=ini_read_real("blocks","index",0)
random_set_seed(ini_read_real("save","seed",0));
while blockindex&gt;0{
//start parsecode
var msg = ini_read_string("blocks","block"+string(blockindex),0);
var splitBy = "!"; //string to split the first string by
var slot = 0;
var splits; //array to hold all splits
var str2 = ""; //var to hold the current split we're working on building

var i;
for (i = 1; i &lt; (string_length(msg)+1); i++) {
    var currStr = string_copy(msg, i, 1);
    if (currStr == splitBy) {
        splits[slot] = str2; //add this split to the array of all splits
        slot++;
        str2 = "";
    } else {
        str2 = str2 + currStr;
        splits[slot] = str2;
    }
}
//End parsecode
with instance_create(real(splits[1]),real(splits[2]),Block){
btime=0
blockid=splits[0]
direction=real(splits[3])
var spritename = asset_get_index("sprBlock" + string(blockid));
sprite_index=spritename
scrBlocks()
}
blockindex-=1
}

}
if blockindex&lt;=0 and openfname!=""
{
firstopenname=""
}



//Items
if mouse_check_button_pressed(mb_right) and Player.speed=0 and itemid="Arrow"{
instance_create(Player.x,Player.y,Arrow)
audio_play_sound(soundArrow,1,false)
}

if mouse_check_button_pressed(mb_right) and Player.speed=0 and itemid="Axe" and instance_number(Swing)=0{
instance_create(Player.x,Player.y,Swing)
audio_play_sound(soundSwing,1,false)
}

if mouse_check_button_pressed(mb_right) and itemid="Flesh" and Player.myhealth&lt;Player.maxhealth{
Player.myhealth+=2
itemid="Dust"
score+=10
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open(working_directory+"emptylands.ini")
ini_write_string("save","last",firstopenname)
if reopen=1{
ini_write_real("save","lastv",1)
}
if reopen=0{
ini_write_real("save","lastv",0)
}
ini_close()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font0)
draw_set_color(c_white)
draw_set_halign(fa_left)
draw_text(0,0,"EmptyLand Adventure Test "+string(version))
draw_text(32,256,string(blockid))
draw_text(400,256,string(itemid))
if Menu.mode=1{
draw_sprite(sprHealthBar,0,20,20)
draw_set_color(c_black)
draw_rectangle(106,23,106*(Player.myhealth/Player.maxhealth),31,0)
draw_set_halign(fa_center)
draw_set_font(fontSM)
draw_set_color(c_black)
draw_text(67,24,string(Player.myhealth)+"/"+string(Player.maxhealth))
draw_set_color(c_white)
draw_text(67,23,string(Player.myhealth)+"/"+string(Player.maxhealth))
draw_set_halign(fa_left)
draw_set_color(c_white)
score_show=string_format(score,6, 0)
score_show=string_replace_all(score_show,' ','0')
draw_text(32,46,score_show)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with ItemPickup
{
if place_meeting(x,y,Player)
{
draw_sprite(sprEPickup,-1,x,y-8)
draw_set_font(fontSM)
draw_text(x+16,y-8,itemid)
draw_set_font(font0)
}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
